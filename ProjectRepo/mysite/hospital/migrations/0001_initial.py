# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-04-02 18:22
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admitted', models.DateTimeField(verbose_name='Time Admitted')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startTime', models.DateTimeField(verbose_name='Start time')),
                ('endTime', models.DateTimeField(verbose_name='End time')),
                ('notes', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Drug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
            ],
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Emails are case-insensitive', regex='^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$')])),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Lab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('labName', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(blank=True, max_length=30, null=True)),
                ('lastName', models.CharField(blank=True, max_length=30, null=True)),
                ('userName', models.CharField(max_length=20)),
                ('password', models.CharField(max_length=20)),
                ('isActive', models.BooleanField()),
                ('address', models.CharField(blank=True, max_length=75, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phoneNumber', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Please enter as '+##########'", regex='^\\+?1?\\d{9,15}$')])),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dosage', models.CharField(max_length=20)),
                ('drug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.Drug')),
            ],
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hospital.Person')),
                ('adminList', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.Hospital')),
            ],
            bases=('hospital.person',),
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hospital.Person')),
                ('doctorList', models.ManyToManyField(to='hospital.Hospital')),
            ],
            bases=('hospital.person',),
        ),
        migrations.CreateModel(
            name='Nurse',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hospital.Person')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.Hospital')),
            ],
            bases=('hospital.person',),
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hospital.Person')),
                ('medicalInfo', models.CharField(blank=True, max_length=500, null=True)),
                ('preferredHospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.Hospital')),
            ],
            bases=('hospital.person',),
        ),
        migrations.AddField(
            model_name='person',
            name='email',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hospital.Email'),
        ),
        migrations.AddField(
            model_name='person',
            name='phoneNumber',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hospital.PhoneNumber'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='atHospital',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.Hospital'),
        ),
        migrations.AddField(
            model_name='admission',
            name='hospital',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.Hospital'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='prescribedFor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.Patient'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='prescribedFrom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.Doctor'),
        ),
        migrations.AddField(
            model_name='lab',
            name='attending',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.Doctor'),
        ),
        migrations.AddField(
            model_name='lab',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.Patient'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='doctorAppointment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.Doctor'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patientAppointment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.Patient'),
        ),
        migrations.AddField(
            model_name='admission',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.Patient'),
        ),
    ]
